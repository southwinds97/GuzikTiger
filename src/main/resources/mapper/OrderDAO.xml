<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.springboot.order.IOrderService">
	 <!-- 주문 목록 조회-->
	<select id="selectOrder" parameterType="String">
		select * from order_list 
	</select>
	
	 <!-- 주문 등록 -->
    <insert id="insertOrder" parameterType="com.edu.springboot.order.OrderDTO" >
       INSERT INTO order_list (
        order_id,
       	member_id, 
       	order_name, 
       	order_phone, 
       	order_addr,
        order_amount, 
        payment, 
        deliv_charge, 
        order_prog, 
        deliv_prog )
        
       VALUES (
        TO_CHAR(SYSDATE, 'YYYYMMDDHH')||'order'||ORDER_LIST_seq.nextval ,
        #{member_id}, 
        #{order_name}, 
        #{order_phone}, 
        #{order_addr}, 
        #{order_amount}, 
        #{payment}, 
        #{deliv_charge}, 
        #{order_prog}, 
        #{deliv_prog}
        ) 
        <selectKey keyProperty="order_id" resultType="String" order="AFTER">
       		select TO_CHAR(SYSDATE, 'YYYYMMDDHH')||'order'||ORDER_LIST_seq.currval from dual
  		</selectKey>
        
    </insert>
    
	 <!-- 주문 상세 등록 -->
    <insert id="insertOrderDtl" parameterType="java.util.List">
    	insert all
        <foreach item="item" collection="list">       
	        INTO order_detail (
	         order_id, 
        	 product_id, 
        	 option_id, 
        	 quantity
        	 )
	        VALUES
	         (
	         #{item.order_id}, 
	         #{item.product_id}, 
	         #{item.option_id}, 
	         #{item.quantity} 
	         )
         </foreach>
         select * from dual
    </insert>	
    
     <!-- 장바구니 주문 목록 조회(전체 결제)-->
	<select id="selectCartPaymentAll" parameterType="com.edu.springboot.order.OrderDTO"
	resultType = "com.edu.springboot.order.OrderDTO">
		select  
		  a.member_id as member_id,
		  a.cart_dtl_id as cart_dtl_id,
		  a.product_id as product_id,
		  a.option_id as option_id,
		  a.quantity as quantity,
		  b.product_name as product_name,
		  c.price,
		  b.option_yn,
		  d.points,
		  c.img_id as img_id

		from cart a, product b, product_dtl c, member d
    		where 1=1
            and a.product_id = b.product_id
            and b.product_id = c.product_id
            and a.member_id = d.id
            and c.idx = 1
		            and member_id = #{member_id}  
             
	</select>
	
	 <!-- 장바구니 주문 목록 조회(선택 결제)-->
	<select id="selectCartPaymentSel" parameterType="com.edu.springboot.order.OrderDTO"
	resultType = "com.edu.springboot.order.OrderDTO">
		select  
		  a.member_id as member_id,
		  a.cart_dtl_id as cart_dtl_id,
		  a.product_id as product_id,
		  a.option_id as option_id,
		  a.quantity as quantity,
		  b.product_name as product_name,
		  c.price,
		  b.option_yn,
		  d.points,
		  c.img_id as img_id

		from cart a, product b, product_dtl c, member d
    		where 1=1
            and a.product_id = b.product_id
            and b.product_id = c.product_id
            and a.member_id = d.id
            and c.idx = 1
		            and member_id = #{member_id} 
			and cart_dtl_id in
			<foreach collection="cart_dtl_id_list" item="item" open="(" close=")" separator=",">
			 #{item} 
            </foreach>
	</select>
    
         <!-- 장바구니 목록 -->
    <select id="selectCart" 
    	resultType = "com.edu.springboot.product.ProductDTO">
    	select  
		  a.member_id as member_id,
		  a.cart_dtl_id as cart_dtl_id,
		  a.product_id as product_id,
		  a.option_id as option_id,
		  a.quantity as quantity,
		  b.product_name as product_name,
		  c.price,
		  b.option_yn,
		  c.img_id as img_id

		from cart a, product b, product_dtl c
    		where 1=1
            and a.product_id = b.product_id
            and b.product_id = c.product_id
            and c.idx = 1
		    and member_id = #{member_id}
	</select> 
    
      <!-- 장바구니 체크목록 -->
    <select id="selectCartChk" parameterType="com.edu.springboot.product.ProductDTO"
    	resultType = "com.edu.springboot.product.ProductDTO">
    	select  
		  a.member_id as member_id,
		  a.cart_dtl_id as cart_dtl_id,
		  a.product_id as product_id,
		  a.option_id as option_id,
		  a.quantity as quantity,
		  b.product_name as product_name,
		  c.price,
		  b.option_yn,
		  c.img_id as img_id

		from cart a, product b, product_dtl c
    		where 1=1
            and a.product_id = b.product_id
            and b.product_id = c.product_id
            and c.idx = 1
		    and member_id = #{member_id}
		    and cart_dtl_id in
			<foreach collection="cart_dtl_id_list" item="item" open="(" close=")" separator=",">
			 #{item} 
            </foreach>
     </select> 
     
          <!-- 장바구니 등록 -->
    <!-- <insert id="insertCart" parameterType="com.edu.springboot.product.ProductDTO" >
        INSERT INTO cart (
		    MEMBER_ID, 
		    CART_DTL_ID, 
		    PRODUCT_ID, 
		    OPTION_ID,
		    QUANTITY
		 )
		VALUES ( 
		    #{member_id}, 
		    #{product_id}||#{idx},
		    #{product_id}, 
		    #{option_id}, 
		    #{quantity}
 	    )  
    </insert>  -->
	<insert id="insertCart" parameterType="java.util.List">
    INSERT INTO cart (
        MEMBER_ID, 
        CART_DTL_ID, 
        PRODUCT_ID, 
        OPTION_ID,
        QUANTITY
    )
    <foreach collection="list" item="item" separator=" UNION ALL ">
        SELECT
            #{item.member_id}, 
            #{item.product_id} || '_' || #{item.idx},  <!-- CONCAT 대신 || 연산자 사용 -->
            #{item.product_id}, 
            #{item.option_id}, 
            #{item.quantity}
        FROM DUAL
    </foreach>
</insert>
     
    <!-- 장바구니에서 수량 변경목록 -->
    <update id="updateCart" 	parameterType = "com.edu.springboot.product.ProductDTO">
    	update cart set
        quantity = #{quantity}
        where member_id = #{member_id} and cart_dtl_id = #{cart_dtl_id}
    	
    </update>
    
    <!-- 장바구니에서 선택 상품 삭제 -->
    <delete id="deleteCartSel" parameterType = "com.edu.springboot.product.ProductDTO">
    	delete from cart
        where member_id = #{member_id} and CART_DTL_ID in
        <foreach collection="cart_dtl_id_list" item="item" open="(" close=")" separator=",">
			 #{item} 
        </foreach>
    </delete>
    
    <!-- 장바구니에서 단건 상품 삭제 -->
    <delete id="deleteCart" parameterType = "com.edu.springboot.product.ProductDTO">
    	delete from cart
        where member_id = #{member_id} and CART_DTL_ID = #{cart_dtl_id}
        
    </delete>
    
     <!-- 결제창에서  상품 삭제 -->
    <delete id="deletePayment" 	parameterType = "com.edu.springboot.product.ProductDTO">
    	delete from cart
        where member_id = #{member_id} and CART_DTL_ID = #{cart_dtl_id}
    </delete>
   

</mapper>