<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.springboot.mypage.IMyPageService">
    <!-- 위시리스트 조회 -->
    <select id="wishListSelect" resultType="map" parameterType="com.edu.springboot.mypage.WishListDTO">
        SELECT * FROM (
            SELECT 
                ROWNUM AS rnum,
                w.idx AS idx,
                w.product_id AS product_id,
                p.product_name AS productName,
                TO_CHAR(pd.price, 'FM999,999,999,999') AS price,
                pd.img_id AS imgId
            FROM 
                wish_list w
            JOIN 
                product p ON w.product_id = p.product_id
            JOIN 
                product_dtl pd ON p.product_id = pd.product_id
            WHERE 
                w.member_id = #{member_id}
                AND pd.idx = 1
            ORDER BY w.idx DESC
        )
        WHERE rnum BETWEEN #{start} AND #{end}
    </select>

    <!-- 위시리스트 전체 갯수 조회 -->
    <select id="getWishListTotalCount" resultType="int" parameterType="String">
        SELECT COUNT(*) FROM wish_list WHERE member_id = #{memberId}
    </select>

    <!-- 위시리스트 중복 확인 -->
    <select id="wishListCheck" parameterType="com.edu.springboot.mypage.WishListDTO" resultType="int">
        SELECT COUNT(*)
        FROM wish_list
        WHERE member_id = #{member_id} AND product_id = #{product_id}
    </select>

    <!-- 위시리스트 추가 -->
    <insert id="wishListAdd" parameterType="com.edu.springboot.mypage.WishListDTO">
        INSERT INTO 
            wish_list (idx, member_id, product_id)
        VALUES (
            wish_list_seq.NEXTVAL,
            #{member_id},
            #{product_id}
        )
    </insert>

    <!-- 위시리스트 삭제 -->
    <delete id="wishListDelete" parameterType="int">
        DELETE FROM wish_list
        WHERE idx = #{idx}
    </delete>

    <!-- 위시리스트 선택 삭제 -->
    <delete id="wishListSelectDelete" parameterType="list">
        DELETE FROM wish_list
        WHERE idx IN
        <foreach item="idx" collection="list" open="(" separator="," close=")">
            #{idx}
        </foreach>
    </delete>

    <!-- 위시리스트 전체 삭제 -->
    <delete id="wishListDeleteAll" parameterType="String">
        DELETE FROM wish_list
        WHERE member_id = #{memberId}
    </delete>
    
    <!-- 최근본 상품 조회  -->
    <select id="recentViewSelect"  resultType="com.edu.springboot.product.ProductDTO">
    	 select a.product_id, a.product_name, b.price, a.img_id, b.idx, d.cd_name,
			         x.option_id_list 
			  from product a , product_dtl b, recent_view_product c ,code_list d,
			  (
			    select product_id , LISTAGG(option_id,';') within group(order by product_id, idx) as option_id_list 
			      from   product_dtl 
			      where 1=1
			      group by product_id
			  )x
			  where 1=1
			  and a.product_id = b.product_id
			  and a.product_id = x.product_id
              and a.product_id = c.product_id
              and b.option_cate = d.code(+)
			  order by c.view_date desc, a.product_id,b.idx
              <!-- 10개까지만 -->
                fetch first 10 rows only
    </select >
    
     <!-- 최근본 상품 등록  -->
    <!-- <insert id="recentViewInsert" parameterType="com.edu.springboot.product.ProductDTO">
      MERGE INTO recent_view_product 
		USING  dual 
		    ON (product_id = #{member_id})
		WHEN MATCHED THEN
		    UPDATE SET view_date = sysdate
		WHEN NOT MATCHED THEN
		INSERT (member_id, product_id, view_date) VALUES (#{member_id}, #{product_id},sysdate)

    </insert> -->
    <insert id="recentViewInsert" parameterType="com.edu.springboot.product.ProductDTO">
    MERGE INTO recent_view_product 
    USING dual 
    ON (member_id = #{member_id} AND product_id = #{product_id})
    WHEN MATCHED THEN
        UPDATE SET view_date = sysdate
    WHEN NOT MATCHED THEN
        INSERT (member_id, product_id, view_date) VALUES (#{member_id}, #{product_id}, sysdate)
</insert>

    <!-- 주문 내역 조회 -->
    <select id="orderSelect" resultType="com.edu.springboot.order.OrderDTO" parameterType="String">
        SELECT * FROM (
            SELECT 
                a.order_id,
                to_char(a.order_date, 'YYYY-MM-DD HH24:MI:SS') AS order_date,
                a.member_id,
                a.order_name,
                a.order_phone,
                a.order_addr,
                a.order_amount,
                a.payment,
                a.deliv_charge,
                a.order_prog,
                a.deliv_prog,
                b.product_id,
                b.option_id,
                b.quantity,
                d.product_name,
                c.price,
                c.img_id
            FROM 
                order_list a
                JOIN order_detail b ON a.order_id = b.order_id
                JOIN product_dtl c ON b.product_id = c.product_id
                JOIN product d ON c.product_id = d.product_id
            WHERE 
                c.idx = 1
                AND a.member_id = #{id}
            ORDER BY 
                a.order_id DESC
        ) WHERE ROWNUM = 1
    </select>

    <!-- 주문 내역 상세 조회 -->
    <select id="orderDetailSelect" resultType="com.edu.springboot.order.OrderDTO" parameterType="String">
        SELECT 
            a.order_id,
            to_char(a.order_date, 'YYYY-MM-DD HH24:MI:SS') AS order_date,
            a.member_id,
            a.order_name,
            a.order_phone,
            a.order_addr,
            a.order_amount,
            a.payment,
            a.deliv_charge,
            a.order_prog,
            a.deliv_prog,
            b.product_id,
            b.option_id,
            b.quantity,
            d.product_name,
            c.price,
            c.img_id
        FROM 
            order_list a
            JOIN order_detail b ON a.order_id = b.order_id
            JOIN product_dtl c ON b.product_id = c.product_id
            JOIN product d ON c.product_id = d.product_id
        WHERE 
            a.order_id = #{order_id}
            AND c.idx = 1
        ORDER BY 
            a.order_id DESC
    </select>
    
</mapper>