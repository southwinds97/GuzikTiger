<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.springboot.qna.IQNAService">
   
   <select id="getTotalCount" resultType="int"
   	parameterType="com.edu.springboot.ParameterDTO">
   		SELECT COUNT(*) from qna_board
   		<if test="searchKeyword != null and !searchKeyword.equals('')">
   			WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
   		</if>
   	</select>
	<select id="listPage" resultType="com.edu.springboot.qna.QNABoardDTO"
		parameterType="com.edu.springboot.ParameterDTO">
		SELECT * FROM (
			SELECT Tb.*, rownum rNum FROM (
				SELECT * FROM qna_board
				<if test="searchKeyword!=null and !searchKeyword.equals('')">
					WHERE ${searchField} LIKE '%'||#{searchKeyword}||'%'
				</if>
				ORDER BY idx DESC
			) Tb
		)	
		WHERE rNum<![CDATA[>=]]>#{start} AND rNum<![CDATA[<=]]>#{end}
	</select>   	
	
	<insert id="write" parameterType="com.edu.springboot.qna.QNABoardDTO">
    INSERT INTO qna_board (idx, product, product_img, product_price, category, title, content, name, secretYN, ofile, sfile,
        password, postdate, uccURL)
    VALUES
    (qna_board_seq.nextval, #{product, jdbcType=VARCHAR}, #{product_img, jdbcType=VARCHAR}, #{product_price, jdbcType=VARCHAR},
    #{category, jdbcType=VARCHAR}, #{title, jdbcType=VARCHAR}, #{content, jdbcType=VARCHAR}, #{name, jdbcType=VARCHAR}, 
     #{secretYN, jdbcType=CHAR}, #{ofile, jdbcType=VARCHAR}, #{sfile, jdbcType=VARCHAR}, 
     #{password, jdbcType=VARCHAR}, sysdate, #{uccURL, jdbcType=VARCHAR})
</insert>

	<select id="view" resultType="com.edu.springboot.qna.QNABoardDTO"
		parameterType="com.edu.springboot.qna.QNABoardDTO">
		SELECT * FROM qna_board WHERE idx=#{idx}
	</select>
	
	<update id="edit" parameterType="com.edu.springboot.qna.QNABoardDTO">
		UPDATE qna_board SET
		product=#{product, jdbcType=VARCHAR}, product_img=#{product_img, jdbcType=VARCHAR}, product_price=#{product_price, jdbcType=VARCHAR},
		category=#{category, jdbcType=VARCHAR}, content=#{content, jdbcType=VARCHAR},
		password=#{password, jdbcType=VARCHAR}, uccURL=#{uccURL, jdbcType=VARCHAR},
		secretYN=#{secretYN, jdbcType=VARCHAR}, ofile=#{ofile, jdbcType=VARCHAR}, sfile=#{sfile, jdbcType=VARCHAR}
		WHERE idx=#{idx}
	</update>
	
	<delete id="delete">
		DELETE FROM qna_board WHERE idx=#{param1}
	</delete>

	<!-- 이전 글의 정보를 가져오는 쿼리 -->
	<select id="getPrevQna" parameterType="String" resultType="com.edu.springboot.qna.QNABoardDTO">
		<![CDATA[
		SELECT * FROM (
			SELECT * FROM qna_board WHERE idx < #{idx} ORDER BY idx DESC
		) WHERE ROWNUM = 1
		]]>
	</select>

	<!-- 다음 글의 정보를 가져오는 쿼리 -->
	<select id="getNextQna" parameterType="String" resultType="com.edu.springboot.qna.QNABoardDTO">
		<![CDATA[
		SELECT * FROM (
			SELECT * FROM qna_board WHERE idx > #{idx} ORDER BY idx ASC
		) WHERE ROWNUM = 1
		]]>
	</select>

	<!-- 관련 글 목록을 가져오는 쿼리 -->
    <select id="getRelatedQnaList" parameterType="String" resultType="com.edu.springboot.qna.QNABoardDTO">
        SELECT * FROM qna_board WHERE category = #{category} ORDER BY postdate DESC
    </select>
    
    <select id="getnameQnaList" parameterType="String" resultType="com.edu.springboot.qna.QNABoardDTO">
        SELECT * FROM qna_board WHERE name = #{name} ORDER BY postdate DESC
    </select>
</mapper>